name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: ['5432:5432']
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Lint & Check (optional)
        run: |
          npm run lint || echo "No linter configured"

      - name: 🧾 Validate Prisma schema
        run: npx prisma validate

      - name: 🔧 Generate Prisma client
        run: npx prisma generate

      - name: 🗄️ Deploy migrations to database
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: 🧪 Run tests
        run: npm test || echo "No tests found"

      - name: 🐳 Build Docker image
        run: docker build -t url-shortener .

      - name: 🚀 Deploy to Render
        if: github.ref == 'refs/heads/main'
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
